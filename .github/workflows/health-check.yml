name: Health Check

on:
  schedule:
    # 毎時0分に実行 (UTC)
    - cron: '0 * * * *'
  workflow_dispatch: # 手動実行も可能

jobs:
  health-check:
    runs-on: ubuntu-latest
    name: Check Application Health
    steps:
      - name: Check Backend Health
        run: |
          echo "🔍 Checking backend health..."
          backend_response=$(curl -s -o /dev/null -w "%{http_code}" https://backend.s-muramori-sys22.workers.dev/)
          if [ $backend_response -eq 200 ]; then
            echo "✅ Backend is healthy (Status: $backend_response)"
          else
            echo "❌ Backend health check failed (Status: $backend_response)"
            exit 1
          fi

      - name: Check Backend API Endpoints
        run: |
          echo "🔍 Checking API endpoints..."
          
          # Users endpoint
          users_response=$(curl -s -o /dev/null -w "%{http_code}" https://backend.s-muramori-sys22.workers.dev/users)
          if [ $users_response -eq 200 ] || [ $users_response -eq 500 ]; then
            echo "✅ Users endpoint responding (Status: $users_response)"
          else
            echo "❌ Users endpoint failed (Status: $users_response)"
          fi
          
          # Posts endpoint  
          posts_response=$(curl -s -o /dev/null -w "%{http_code}" https://backend.s-muramori-sys22.workers.dev/posts)
          if [ $posts_response -eq 200 ] || [ $posts_response -eq 500 ]; then
            echo "✅ Posts endpoint responding (Status: $posts_response)"
          else
            echo "❌ Posts endpoint failed (Status: $posts_response)"
          fi

      - name: Check Frontend Health
        run: |
          echo "🔍 Checking frontend health..."
          frontend_response=$(curl -s -o /dev/null -w "%{http_code}" https://566e1f9c.frontend-5xn.pages.dev)
          if [ $frontend_response -eq 200 ]; then
            echo "✅ Frontend is healthy (Status: $frontend_response)"
          else
            echo "❌ Frontend health check failed (Status: $frontend_response)"
            exit 1
          fi

      - name: Create Health Check Summary
        if: always()
        run: |
          echo "## 🏥 Health Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Backend Status" >> $GITHUB_STEP_SUMMARY
          echo "- Main API: https://backend.s-muramori-sys22.workers.dev" >> $GITHUB_STEP_SUMMARY
          echo "- Users Endpoint: https://backend.s-muramori-sys22.workers.dev/users" >> $GITHUB_STEP_SUMMARY  
          echo "- Posts Endpoint: https://backend.s-muramori-sys22.workers.dev/posts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Frontend Status" >> $GITHUB_STEP_SUMMARY
          echo "- Application: https://566e1f9c.frontend-5xn.pages.dev" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Timestamp" >> $GITHUB_STEP_SUMMARY
          echo "- Check Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const issue = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `🚨 Health Check Failed - ${new Date().toISOString()}`,
              body: `## Health Check Failure Report
              
              **Time:** ${new Date().toUTCString()}
              **Workflow:** ${context.workflow}
              **Run ID:** ${context.runId}
              
              ### Failed Services
              
              One or more services are not responding correctly. Please check:
              
              1. **Backend API**: https://backend.s-muramori-sys22.workers.dev
              2. **Frontend App**: https://566e1f9c.frontend-5xn.pages.dev
              
              ### Next Steps
              
              1. Check Cloudflare Dashboard for any outages
              2. Review recent deployments in GitHub Actions
              3. Check error logs in Cloudflare Workers/Pages
              4. Verify environment variables and secrets
              
              **Auto-generated by GitHub Actions Health Check**`,
              labels: ['bug', 'health-check', 'urgent']
            };
            
            github.rest.issues.create(issue);
